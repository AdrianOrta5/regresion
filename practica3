### Ejrercicios
##generar 3 secuencias que generen los sig datos
#1)1000 datos que se generen de 3 en 3 y pedir a R el dato 300
#2)450 datos que su secuencia sea de 50 en 50 pedir el dato 10
#3)2000 datos que su secuencia se de 3 en 3 
#pedir los datos 3,15, 800 y 1999

secuencia1<-seq(from=1,to=3000,by=3)
secuencia1[300]
secuencia2<-seq(1,22500,50)
secuencia2[10]
secuencia3<-seq(0,599.9,.3)
secuencia3[3]
secuencia3[15]
secuencia3[800]
secuencia3[1999]

###Ejercicio datos aleatorios
##1)suponemos una empresa que quiere estimar una pension para
#sus trabajadores con base en la antiguedad, por lo que se 
#requiere estimar una muestra de 500 trabajadores y que sus
#rangos de antiguedad sean desde 0 a 30 años, pedir el ultimo
#dato de esta muestra
#2) Generar una muestra de 50000 datos que tengan un rango de 
# 0 hasta 100000
#3) Generar una muestra de 50 datos que que tengan un rango de
#10 a 19, pedir a R los datos 34,43 y 49

trabajadores antiguedad<-sample(0:30,500,replace=TRUE)
trabajadores[500]
muestra<-sample(0:100000,50000)
muestra2<-sample(10:19,50,replace=TRUE)
muestra2[34]
muestra2[43]
muestra2[49]

matriz<-data.frame(sample (0:100000,50000)) 
##matriz de 50000 datos, generados aleatoriamente entre 0 y 100000
View(matriz)


##matrices
e<-1:10 ##vector del uno al 10
##para convertir en matriz se utiliza dim
dim(e)<-c(5,2) #matriz de 5 renglones y 2 columnas
View(e)
#para mandar llamar especificamente un dato de la matriz
e[5, 2] #mandas llamar el dato del renglon 5, columna 2
e[3,2] #dato renglon 3 columna 2
e[2,2]
#para solo conocer los valores de las columnas
e[,2] #da todos los datos de la columna 2
e[,1] #da todos los datos de la columna 1
#para solo conocer los valores de las filas
e[1,] #valores de la fila 1
e[2,]
e[3,]
e[4,]
e[5,]

### como crear matrices
#con la funcion matrix
f<-matrix(110:119,nrow=5,ncol=2,byrow=TRUE)
View(f)
#la primer entrada son los datos que tendra la matriz, 
#la segunda es para el numero de renglones o filas
#la tercera es para el numero de columna
#el byrow es la forma en que corre la matriz, en este caso
#con TRUE la numeracion la hace por renglon, el false esta por
#default es decir correria los datos por columnas
g<- matrix(1:10,nrow=5,ncol=2)
View(g)

##tambien se le puede asignar nombres a los renglones y 
#columnas de las matrices para esto usamos rownames 
#y colnames resoectivamente

rownames(f)<-c("manzana","naranja","piña","melon","mango")
View(f)
colnames(f)<-c("mercado1","mercado2")
#si queremos preguntara r el nombre de filas o columnas
colnames(f)
rownames(f)

#otra forma de generar matrices
s1<-rbind(1:2,4:3,c(5,6),c(2,7),c(8,9))
View(s1)
#cada argumento define un renglon
s2<-cbind(5:3,c(4,5,6),9:7,c(1,5,7),3:5)
View(s2)
## si ponemos atencion la primer matriz contiene 2 datos en
#cada renglon y la segunda 3, al parecer se pueden alternar
